<?phpclass addressinfomodel extends BaseModel {    public $id;    // int primary key auto_increment,    public $restaurantid; //int references restaurant(id),    public $street; //varchar(100),    public $city; //varchar(100),    public $state; //varchar(100),    public $zipcode; //varchar(15)      function __construct() {        parent::__construct();        //$this->examcatid=Validator::Key($keys['layout_welcome_index_label');    }    public function __toString() {        return $this->zipcode;    }    public function validate() {        reset($this->errors);        Validator::validate($this, "restaurantid", "Required", Validator::$VALIDATION_NONE);        Validator::validate($this, "street", "Required", Validator::$VALIDATION_NONE);        Validator::validate($this, "city", "Required", Validator::$VALIDATION_NONE);        Validator::validate($this, "state", "Required", Validator::$VALIDATION_NONE);        Validator::validate($this, "zipcode", "Required", Validator::$VALIDATION_NONE);        return!$this->haserrors();    }    public static function Create(addressinfomodel $addressinfo_model) {        $mysqli = Config::OpenDBConnection();        $query = "insert into ws_addressinfo({$addressinfo_model->__columns}) values({$addressinfo_model->__params})";        $stmt = Config::CreateStatement($mysqli, $query);        $stmt->bind_param("iissss", $addressinfo_model->id, $addressinfo_model->restaurantid, $addressinfo_model->street, $addressinfo_model->city, $addressinfo_model->state, $addressinfo_model->zipcode);        $stmt->execute();        $id = $mysqli->insert_id;        $mysqli->close();        return $id;    }    public static function ReadAPAge(&$pagecount, $pageno=1, $pagesize=10) {        $limit = BaseModel::Limit($pageno, $pagesize);        $addressinfo_model = new addressinfomodel();        $mysqli = Config::OpenDBConnection();        $query = "select * from ws_addressinfo{$limit}";        $stmt = Config::CreateStatement($mysqli, $query);        //$stmt->bind_param("i", $examcatid);        $stmt->bind_result($addressinfo_model->id, $addressinfo_model->restaurantid, $addressinfo_model->street, $addressinfo_model->city, $addressinfo_model->state, $addressinfo_model->zipcode);        $stmt->execute();        $list = array();        while ($stmt->fetch()) {            $obj = new addressinfomodel();            Utils::COPY_ROW_TO_OBJ($obj, $addressinfo_model);            $list[$obj->id] = $obj;        }        $pagecount = dbmodel::PageCount("ws_addressinfo");//        $pagecount = dbmodel::PageCount("useracc", "id in (select useraccid from exam where testpaperid={$testpaperid})", $pagesize);        $mysqli->close();        return $list;    }    public static function SearchByZipcode(&$pagecount,$zipcode, $pageno=1, $pagesize=10) {        $limit = BaseModel::Limit($pageno, $pagesize);        $addressinfo_model = new addressinfomodel();        $mysqli = Config::OpenDBConnection();        $query = "select * from ws_addressinfo where zipcode='{$zipcode}' {$limit}";        $stmt = Config::CreateStatement($mysqli, $query);        $stmt->bind_result($addressinfo_model->id, $addressinfo_model->restaurantid, $addressinfo_model->street, $addressinfo_model->city, $addressinfo_model->state, $addressinfo_model->zipcode);        $stmt->execute();        $list = array();        while ($stmt->fetch()) {            $obj = new addressinfomodel();            Utils::COPY_ROW_TO_OBJ($obj, $addressinfo_model);            $list[$obj->id] = $obj;        }        $pagecount = dbmodel::PageCount("ws_addressinfo");//        $pagecount = dbmodel::PageCount("useracc", "id in (select useraccid from exam where testpaperid={$testpaperid})", $pagesize);        $mysqli->close();        return $list;    }    public static function ReadAll() {        $addressinfo_model = new addressinfomodel();        $mysqli = Config::OpenDBConnection();        $query = "select * from ws_addressinfo order by zipcode";        $stmt = Config::CreateStatement($mysqli, $query);        $stmt->bind_result($addressinfo_model->id, $addressinfo_model->restaurantid, $addressinfo_model->street, $addressinfo_model->city, $addressinfo_model->state, $addressinfo_model->zipcode);        $stmt->execute();        $list = array();        while ($stmt->fetch()) {            $obj = new addressinfomodel();            Utils::COPY_ROW_TO_OBJ($obj, $addressinfo_model);            $list[$obj->id] = $obj;        }        $mysqli->close();        return $list;    }    public static function ReadSingle($id) {        $addressinfo_model = new addressinfomodel();        $mysqli = Config::OpenDBConnection();        $query = "select * from ws_addressinfo where id =?";        $stmt = Config::CreateStatement($mysqli, $query);        $stmt->bind_param("i", $id);        $stmt->bind_result($addressinfo_model->id, $addressinfo_model->restaurantid, $addressinfo_model->street, $addressinfo_model->city, $addressinfo_model->state, $addressinfo_model->zipcode);        $stmt->execute();        if ($stmt->fetch()) {            $mysqli->close();            return $addressinfo_model;        } else {            $mysqli->close();            return null;        }    }}?>